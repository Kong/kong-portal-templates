
{{!-- template --}}
<div id="registration-form">
  <h1>Request Access</h1>
  <div class="alert alert-info">
    <b>Please fill out the below form and we will notify you once your request gets approved.</b>
  </div>
  <form id="register">
    <div class="wrapper" :class="{ loaded: !isLoading }">
      <div v-for="(field, i) in fields" :key="i">
        <label
            :for="field.field_name">${ field.input }</label>
        <input :id="field.field_name"
              :name="field.field_name"
              :type="field.type_of_input"
              :required="field.required" />
      </div>
      <label for="email">Email</label>
      <input v-model="email" id="email" type="text" name="email" required/>
      <div v-if="authType === 'basic-auth'">
          <label for="password">Password</label>
          <input id="password" type="password" name="password" required />
      </div>
      <div v-if="authType === 'key-auth'">
          <label for="key">Api Key</label>
          <input id="key" type="text" name="key" required />
      </div>
    </div>
    <button class="button button-primary" type="submit">Sign Up</button>
  </form>
</div>

{{!-- component --}}
<script style="display: none;">
window.registerApp(function () {
  new window.Vue({
    el: '#registration-form',
    delimiters: ['${', '}'],

    data () {
      return {
        fields: [{}],
        authType: null,
        email: "",
        isLoading: false
      }
    },
    methods: {
      getUrlVars() {
        var vars = {}
        var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {
          vars[key] = value
        })
        return vars
      },
      getUrlParam (parameter, defaultValue){
        var urlParameter = defaultValue;
        if(window.location.href.indexOf(parameter) > -1){
          urlParameter = this.getUrlVars()[parameter];
        }
        return urlParameter;
      }
    },
    mounted () {
      this.getUrlParam('email', '')
      document.getElementById('register').addEventListener('submit', e => { e.preventDefault() })

      if (window.K_CONFIG) {
        this.authType = window.K_CONFIG.PORTAL_AUTH
        this.fields = window.transformMetaFields(
          window.K_CONFIG.PORTAL_DEVELOPER_META_FIELDS
        )
      }
      this.isLoading = false
    }
  })
})
</script>

<style style="display: none;">
  #registration-form .wrapper:not(.loaded) label {
    color: white;
  }
</style>

