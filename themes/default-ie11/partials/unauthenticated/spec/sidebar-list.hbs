{{!-- imports --}}
{{> unauthenticated/spec/helpers-js }}

{{!-- template --}}
<div class="spec sidebar-list" id="spec-sidebar-list" v-if="sidebarData.length">
  <ul :class="{ active: !isLoading }">
    <li class="list-title">Resources</li>
    <li v-for="sidebarItem in sidebarData" class="submenu" :class="{ active: isTagActive(sidebarItem.tag) }">
      <span class="submenu-title" @click="subMenuClicked(sidebarItem)">${ sidebarItem.tag }</span>
      <ul class="submenu-items">
        <div v-for="path in sidebarItem.paths">
          <div v-for="method in path.methods">
            <li class="method" :class="{ active: isIdActive(method.id) }">
              <a @click="sidebarAnchorClicked(sidebarItem, method)">
                ${method.summary}
              </a>
            </li>
          </div>
        </div>
      </ul>
    </li>
  </ul>
</div>

{{!-- component --}}
<script>
  "use strict";

  window.registerApp(function() {
    new window.Vue({
      el: '#spec-sidebar-list',
      delimiters: ['${', '}'],
      data: function data() {
        return {
          specName: window._kong.spec.name,
          spec: window._kong.spec,
          sidebarData: [],
          activeTags: [],
          activeId: null,
          isLoading: true,
          buildSidebar: function buildSidebar() {
            console.log('error: buildSidebar helper failed to load');
          },
          retrieveParsedSpec: function retrieveParsedSpec() {
            console.log('error: retrieveParsedSpec helper failed to load');
          }
        };
      },
      mounted: function mounted() {
        if (window.helpers) {
          this.buildSidebar = window.helpers.buildSidebar || this.buildSidebar;
          this.retrieveParsedSpec = window.helpers.retrieveParsedSpec || this.retrieveParsedSpec;
          var spec = this.retrieveParsedSpec(this.specName, this.spec);
          var builtSpec = this.buildSidebar(spec);
          this.sidebarData = builtSpec;
          this.isLoading = false;
        }
      },
      methods: {
        moveToAnchor: function moveToAnchor(destination) {
          window.scrollTo(0, destination.offsetTop - 120);
        },
        isIdActive: function isIdActive(id) {
          return this.activeId === id;
        },
        isTagActive: function isTagActive(tag) {
          return this.activeTags.includes(tag);
        },
        sidebarAnchorClicked: function sidebarAnchorClicked(sidebarItem, method) {
          this.activeTags.push(sidebarItem.tag);
          this.activeId = method.id;
          var anchorPath = "operations-".concat(sidebarItem.tag, "-").concat(method.id);
          window.location.hash = anchorPath;
          var anchor = document.querySelector("#".concat(anchorPath));
          this.moveToAnchor(anchor);
        },
        subMenuClicked: function subMenuClicked(sidebarItem) {
          if (this.isTagActive(sidebarItem.tag)) {
            this.activeTags = this.activeTags.filter(function(activeTag) {
              return activeTag !== sidebarItem.tag;
            });
            return;
          }

          this.activeTags.push(sidebarItem.tag);
        }
      }
    });
  });
</script>

{{!-- style --}}
<style>
  #spec-sidebar-list>ul:not(.active) {
    display: none;
  }

  #spec-sidebar-list .method a {
    cursor: pointer;
  }

  #spec-sidebar-list {
    padding: 0 1.5rem;
    margin-top: 2rem;
  }

  #spec-sidebar-list ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
  }

  #spec-sidebar-list ul li {
    padding: .5rem;
    font-size: 15px;
    font-weight: 400;
    color: rgba(0, 0, 0, .7);
    text-transform: capitalize;
  }

  #spec-sidebar-list ul li a {
    color: inherit;
  }

  #spec-sidebar-list ul li a:hover {
    color: black;
  }

  #spec-sidebar-list ul.list-title {
    font-weight: 700;
    color: rgba(0, 52, 89, 1);
    text-transform: uppercase;
  }

  #spec-sidebar-list ul.submenu {
    margin-top: 1rem;
    margin-bottom: 1rem;
  }

  #spec-sidebar-list ul li.submenu.active ul {
    height: auto;
    max-height: 9999px;
  }

  #spec-sidebar-list ul li .submenu.active .submenu-title:after {
    transform: rotate(90deg);
  }

  #spec-sidebar-list ul li .submenu-title {
    position: relative;
    display: block;
    font-size: 15px;
    font-weight: 500;
    color: rgba(0, 0, 0, .85);
    cursor: pointer;
  }

  #spec-sidebar-list ul li .submenu-title:after {
    position: absolute;
    display: block;
    content: '';
    top: 2px;
    left: -1rem;
    width: 0;
    height: 0;
    border-top: 5px solid transparent;
    border-bottom: 5px solid transparent;
    border-left: 5px solid black;
  }

  #spec-sidebar-list ul li .submenu-items {
    max-height: 0;
    overflow: hidden;
  }

  #spec-sidebar-list ul li .submenu-items a {
    display: block;
    font-size: 14px;
    line-height: 1.2;
    font-weight: normal;
    color: rgba(0, 0, 0, .7);
  }

  #spec-sidebar-list ul li .submenu-items a:hover {
    color: rgba(0, 0, 0, 1);
  }

  #spec-sidebar-list ul li .submenu-items li.active {
    background: rgba(0, 0, 0, .05);
  }

  #spec-sidebar-list ul li .submenu-items li.active a {
    font-weight: 500;
  }

  #spec-sidebar-list ul li .method:before {
    display: none;
    width: 47px;
    margin-right: .5rem;
    padding-top: .15rem;
    color: #fff;
    text-align: center;
    font-weight: normal;
    font-size: 11px;
    line-height: 1rem;
    border-radius: 2px;
    vertical-align: bottom;
  }

  #spec-sidebar-list ul li .method-post:before {
    content: "POST";
    background: #248FB2;
  }

  #spec-sidebar-list ul li .method-put:before {
    content: "PUT";
    background: #9B6F8A;
  }

  #spec-sidebar-list ul li .method-get:before {
    content: "GET";
    background: #6ABD5A;
  }

  #spec-sidebar-list ul li .method-delete:before {
    content: "DELETE";
    background: #E2797A;
  }
</style>